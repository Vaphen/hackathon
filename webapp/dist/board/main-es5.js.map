{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/overview/overview.component.ts","webpack:///src/app/overview/overview.component.html","webpack:///src/app/landing/landing.component.ts","webpack:///src/app/landing/landing.component.html","webpack:///src/app/services/app.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/map/map.component.ts","webpack:///src/app/map/map.component.html","webpack:///src/app/map/rest.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/map/map.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","OverviewComponent","appService","activatedRoute","router","restService","fragment","subscribe","city","navigate","value","tiles","JSON","parse","stringify","initialTiles","tile","barScore","barsValue","groceriesScore","groceriesValue","parkingLotScore","parkingLotsValue","restaurantScore","restaurantsValue","transportationScore","transportationValue","console","log","next","updateCity","updateWork","change","selector","templateUrl","styleUrls","LandingComponent","cityFormControl","required","search","AppService","groceriesChecked","transportationChecked","barsChecked","parkingLotsChecked","restaurantsChecked","providedIn","AppComponent","AppModule","declarations","imports","providers","bootstrap","MapComponent","chRef","inKm","centerLong","centerLat","address","options","layers","maxZoom","attribution","zoom","center","newAddressPoints","map","getAllTiles","max","forEach","avg","push","latitude","longitude","x","heat","remove","radius","blur","gradient","addTo","on","mouseMv","bind","e","lat","latlng","lng","rect","curRect","getDetails","tooltipRef","nativeElement","innerHTML","types","Map","t","amount","has","type","get","set","val","key","polygon","color","popup","bindPopup","addEventListener","getSpecificInfos","res","elements","elem","tags","name","setPopupContent","reverseGeocode","detectChanges","onMapReady","getRandomColor","letters","i","Math","floor","random","Tile","Details","id","tilesId","distance","nodeId","RestService","client","coords","pipe","coord","g","results","length","comp","components","firstPart","road","neighbourhood","postcode","routes","path","component","AppRoutingModule","forRoot","exports","MapModule","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\nimport { RestService } from '../map/rest.service';\n\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\n\nimport { AppService } from '../services/app.service';\nimport { map, filter } from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent implements OnInit {\n  city: string;\n  work: string;\n\n  appService: AppService;\n\n\n  constructor(appService: AppService, private activatedRoute: ActivatedRoute, private router: Router, private restService: RestService) { \n\n    this.appService = appService\n   }\n\n  ngOnInit(): void {\n    this.activatedRoute.fragment.subscribe(fragment => this.appService.city = fragment);\n  }\n\n  updateCity() {\n    this.router.navigate(['overview'], { fragment: this.appService.city });\n  }\n  \n  updateWork() {\n  }\n\n  formatLabel(value: number) {\n    if (value > 7) {\n      return \"+++\";\n    } else if (value < 8 && value > 3) {\n      return \"++\";\n    } else {\n      return \"+\";\n    }\n  }\n\n  change() {\n\n    const tiles = JSON.parse(JSON.stringify(this.restService.initialTiles));\n    \n    for (const tile of tiles) {\n      //console.log(tile.barScore)\n      \n      tile.barScore += tile.barScore / 0.04 * this.appService.barsValue;\n      if (this.appService.barsValue === 0) {\n        tile.barScore = 0;\n      }\n      tile.groceriesScore += tile.groceriesScore / 0.04 *  this.appService.groceriesValue;\n      if (this.appService.groceriesValue === 0) {\n        tile.groceriesValue = 0;\n      }\n      tile.parkingLotScore +=  tile.parkingLotScore / 0.04 *  this.appService.parkingLotsValue;\n      if (this.appService.parkingLotsValue === 0) {\n        tile.parkingLotsValue = 0;\n      }\n      tile.restaurantScore += tile.restaurantScore / 0.04 * this.appService.restaurantsValue;\n      if (this.appService.restaurantsValue === 0) {\n        tile.restaurantsValue = 0;\n      }\n      tile.transportationScore += tile.transportationScore / 0.04 * this.appService.transportationValue;\n      if (this.appService.transportationValue === 0) {\n        tile.transportationValue = 0;\n      }\n      \n    \n    }\n    console.log(tiles)\n    this.restService.tiles.next(tiles);\n  }\n\n  getVal(value: number) {\n    if (value === 6) {\n      return 0.2;\n    } else if (value === 7) {\n      return 0.3;\n    }else if (value === 8) {\n      return 0.4;\n    }else if (value === 9) {\n      return 0.5;\n    }else if (value === 10) {\n      return 0.6;\n    }\n\n    if (value === 4) {\n      return -0.1;\n    } else if (value === 3) {\n      return -0.2;\n    }else if (value === 2) {\n      return -0.3;\n    }else if (value === 1) {\n      return -0.4;\n    }else if (value === 0) {\n      return -0.5;\n    }\n\n    return 1;\n  }\n}\n","<div class=\"d-flex flex-column h-100 w-100 main\">\n    <div class=\"row w-100 flex-nowrap\">\n        <div class=\"col-3 pt-1 display-flex justify-content-center\">\n            <img src=\"../../assets/logo.svg\" class=\"logo\" routerLink=\"/\" />\n        </div>\n        <div class=\"col\">\n            <div class=\"container d-flex justify-content-between\">\n                <div class=\"col-md-auto d-flex pb-3 pt-3\">\n                    <input class=\"city-input xl-font\" [(ngModel)]=\"appService.city\" (keyup.enter)=\"updateCity()\"\n                        (blur)=\"updateCity()\" placeholder=\"Enter your City\">\n                </div>\n                <div class=\"col-md-auto d-flex pb-3 pt-3\">\n                    <input class=\"city-input xl-font\" [(ngModel)]=\"work\" (keyup.enter)=\"updateWork()\"\n                        (blur)=\"updateWork()\" placeholder=\"Enter your working address\">\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row w-100 bg flex-grow-1\">\n        <div class=\"col-3 pt-5 display-flex justify-content-center menu-bg\">\n            <div class=\"container d-flex justify-content-center align-items-center\">\n                <div class=\"col scoring\">\n                    <div class=\"row\">\n                        <mat-checkbox [(ngModel)]=\"appService.groceriesChecked\">Groceries</mat-checkbox>\n                    </div>\n                    <div class=\"row\">\n                        <mat-checkbox [(ngModel)]=\"appService.transportationChecked\">Transportation</mat-checkbox>\n                    </div>\n                    <div class=\"row\">\n                        <mat-checkbox [(ngModel)]=\"appService.barsChecked\">Bars/Cafe</mat-checkbox>\n                    </div>\n                    <div class=\"row\">\n                        <mat-checkbox [(ngModel)]=\"appService.parkingLotsChecked\">Parking lots</mat-checkbox>\n                    </div>\n                    <div class=\"row\">\n                        <mat-checkbox [(ngModel)]=\"appService.restaurantsChecked\">Restaurants</mat-checkbox>\n                    </div>\n                    <div class=\"row\">\n                        <mat-checkbox>Nature</mat-checkbox>\n                    </div>\n                    <div class=\"row\">\n                        <mat-checkbox>Crime</mat-checkbox>\n                    </div>\n                    <div class=\"row\">\n                        <mat-checkbox>Education</mat-checkbox>\n                    </div>\n                    <div class=\"row\">\n                        <mat-checkbox>Pricing</mat-checkbox>\n                    </div>\n                    <div class=\"row\">\n                        <mat-checkbox>Air Quality</mat-checkbox>\n                    </div>\n                </div>\n                <div class=\"col scoring\">\n                    <div class=\"row\">\n                        <mat-slider min=\"0\" max=\"10\" step=\"1\" thumbLabel [displayWith]=\"formatLabel\"\n                            [(ngModel)]=\"appService.groceriesValue\" (change)=\"change()\"></mat-slider>\n                    </div>\n                    <div class=\"row\">\n                        <mat-slider min=\"0\" max=\"10\" step=\"1\" thumbLabel [displayWith]=\"formatLabel\"\n                            [(ngModel)]=\"appService.transportationValue\" (change)=\"change()\"></mat-slider>\n                    </div>\n                    <div class=\"row\">\n                        <mat-slider min=\"0\" max=\"10\" step=\"1\" thumbLabel [displayWith]=\"formatLabel\"\n                            [(ngModel)]=\"appService.barsValue\" (change)=\"change()\"></mat-slider>\n                    </div>\n                    <div class=\"row\">\n                        <mat-slider min=\"0\" max=\"10\" step=\"1\" thumbLabel [displayWith]=\"formatLabel\"\n                            [(ngModel)]=\"appService.parkingLotsValue\" (change)=\"change()\"></mat-slider>\n                    </div>\n                    <div class=\"row\">\n                        <mat-slider min=\"0\" max=\"10\" step=\"1\" thumbLabel [displayWith]=\"formatLabel\"\n                            [(ngModel)]=\"appService.restaurantsValue\" (change)=\"change()\"></mat-slider>\n                    </div>\n                    <div class=\"row\">\n                        <mat-slider min=\"0\" max=\"10\" step=\"1\" thumbLabel [displayWith]=\"formatLabel\"></mat-slider>\n                    </div>\n                    <div class=\"row\">\n                        <mat-slider min=\"0\" max=\"10\" step=\"1\" thumbLabel [displayWith]=\"formatLabel\"></mat-slider>\n                    </div>\n                    <div class=\"row\">\n                        <mat-slider min=\"0\" max=\"10\" step=\"1\" thumbLabel [displayWith]=\"formatLabel\"></mat-slider>\n                    </div>\n                    <div class=\"row\">\n                        <mat-slider min=\"0\" max=\"10\" step=\"1\" thumbLabel [displayWith]=\"formatLabel\"></mat-slider>\n                    </div>\n                    <div class=\"row\">\n                        <mat-slider min=\"0\" max=\"10\" step=\"1\" thumbLabel [displayWith]=\"formatLabel\"></mat-slider>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col p-0 justify-content-center\">\n\n            <app-map></app-map>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.scss']\n})\nexport class LandingComponent implements OnInit {\n\n  cityFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  search() {\n    this.router.navigate(['overview'], { fragment: this.cityFormControl.value });\n  }\n}\n","<div class=\"container-fluid w-100 h-100 main\">\n    <div class=\"container h-10 d-flex justify-content-center align-items-center\">\n        <img src=\"../../assets/logo.svg\" class=\"logo\">\n    </div>\n    <div class=\"container h-10 d-flex justify-content-center align-items-center\">\n        <form class=\"city-form\" (ngSubmit)=\"search()\">\n            <input [formControl]=\"cityFormControl\" class=\"city-input\" placeholder=\"Enter your City\">\n        </form>\n    </div>\n    <div class=\"container h-10 d-flex justify-content-center align-items-center button-container\">\n        <button mat-flat-button color=\"accent\" (click)=\"search()\">Match me!</button>\n    </div>\n    <div class=\"blockquote-wrapper\">\n        <div class=\"blockquote\">\n          <h1>\n            Don’t buy <span style=\"color:#fdcd5c\">the house</span>, buy <span style=\"color:#fdcd5c\">the neighborhood</span>.\n           </h1>\n          <h4>&mdash;Russian Proverb<br></h4>\n        </div>\n      </div>      \n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppService {\n    groceriesValue = 1;\n    transportationValue = 1;\n    barsValue = 1;\n    parkingLotsValue = 1;\n    restaurantsValue = 1;\n\n    groceriesChecked = true;\n    transportationChecked = true;\n    barsChecked = true;\n    parkingLotsChecked = true;\n    restaurantsChecked = true;\n\n    city: string;\n    work: string;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor() {\n  }\n}","<router-outlet></router-outlet>\n<div class=\"container-fluid d-flex w-100 main footer\">\n  <div class=\"col w-50\">\n      <a>© 2020 - 2020 GoodHood</a>\n  </div>\n  <div class=\"col w-50 d-flex flex-row-reverse\">\n      <a class=\"link\" href=\"http://\">Sitemap</a>\n      <a class=\"link\" href=\"http://\">Imprint</a>\n      <a class=\"link\" href=\"http://\">Privacy Policy</a>\n      <a class=\"link\" href=\"http://\">Cookie Settings</a>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatSliderModule } from '@angular/material/slider';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { MapModule } from './map/map.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { OverviewComponent } from './overview/overview.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { LandingComponent } from './landing/landing.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatIconModule} from '@angular/material/icon'; \nimport { AppService } from './services/app.service';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OverviewComponent,\n    LandingComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSliderModule,\n    MatGridListModule,\n    MatCheckboxModule,\n    MapModule,\n    MatTooltipModule,\n    HttpClientModule,\n    MatIconModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [AppService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ObserversModule } from \"@angular/cdk/observers\";\nimport {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnInit,\n  ReflectiveInjector,\n  ViewChild,\n} from \"@angular/core\";\nimport * as L from \"leaflet\";\nimport \"leaflet.heat/dist/leaflet-heat.js\";\nimport { RestService, Details, OSM, Tile } from \"./rest.service\";\n\ninterface IHeadLayer {\n  heatLayer(points: any[], obj: object);\n}\n\n@Component({\n  selector: \"app-map\",\n  templateUrl: \"./map.component.html\",\n  styleUrls: [\"./map.component.scss\"],\n})\nexport class MapComponent implements OnInit {\n  private readonly inKm = 1 / 111 / 10;\n  private readonly centerLong = 48.4060822;\n  private readonly centerLat = 9.9876076;\n  private heat: any;\n  private curRect: any[];\n\n  @ViewChild(\"tooltip\")\n  tooltipRef: ElementRef<HTMLElement>;\n  address = \"\";\n\n  options = {\n    layers: [\n      L.tileLayer(\"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        maxZoom: 16,\n        attribution: \"...\",\n      }),\n    ],\n    zoom: 14,\n    center: L.latLng(\n      this.centerLong - this.inKm * 13,\n      this.centerLat + this.inKm * 13\n    ),\n  };\n\n  layers = [];\n\n  constructor(\n    private chRef: ChangeDetectorRef,\n    private restService: RestService\n  ) {}\n\n  ngOnInit(): void {}\n\n  newAddressPoints = [];\n  onMapReady(map) {\n    this.restService.getAllTiles().subscribe();\n\n    this.restService.tiles.subscribe((tiles: Tile[]) => {\n      this.newAddressPoints = [];\n      let max = 0;\n      tiles.forEach((tile: Tile) => {\n        if (avg(tile) > max) {\n          max = avg(tile);\n        }\n\n        this.newAddressPoints.push([tile.latitude, tile.longitude, avg(tile)]);\n      });\n\n      this.newAddressPoints.forEach((x) => (x[2] = x[2] / max));\n      console.log(max);\n\n      if (this.heat) {\n        this.heat.remove();\n      }\n      this.heat = ((L as any) as IHeadLayer).heatLayer(this.newAddressPoints, {\n        radius: 30,\n        blur: 20,\n        gradient: {\n          0.0: \"red\",\n          0.9: \"yellow\",\n          1.0: \"green\",\n        },\n      });\n      this.heat = this.heat.addTo(map);\n    });\n\n    map.on(\"mousemove\", this.mouseMv.bind(this));\n  }\n\n  mouseMv(e) {\n    const lat = e.latlng.lat;\n    const lng = e.latlng.lng;\n\n    const rect = [\n      [lat - (lat % this.inKm), lng - (lng % this.inKm)],\n      [lat - (lat % this.inKm) + this.inKm, lng - (lng % this.inKm)],\n      [\n        lat - (lat % this.inKm) + this.inKm,\n        lng - (lng % this.inKm) + this.inKm,\n      ],\n      [lat - (lat % this.inKm), lng - (lng % this.inKm) + this.inKm],\n    ];\n\n    if (JSON.stringify(this.curRect) == JSON.stringify(rect)) {\n      return;\n    }\n\n    this.restService.getDetails([1, 2]).subscribe((x: Details[]) => {\n      this.tooltipRef.nativeElement.innerHTML = \"\";\n      const types = new Map<string, number>();\n      x.forEach((t: Details) => {\n        let amount = 0;\n        if (types.has(t.type)) {\n          amount = types.get(t.type);\n        }\n        types.set(t.type, amount + 1);\n      });\n\n      this.tooltipRef.nativeElement.innerHTML = \"<b>Ø 3km</b><br>\";\n      types.forEach((val, key) => {\n        this.tooltipRef.nativeElement.innerHTML += `${key}: ${val}<br>`;\n      });\n    });\n\n    this.curRect = rect;\n\n    this.layers = [];\n    const polygon = L.polygon(this.curRect, {\n      color: \"white\",\n    });\n\n    const popup = polygon.bindPopup(\"Infos\");\n    popup.addEventListener(\"click\", () => {\n      this.restService.getSpecificInfos().subscribe((x: OSM.RootObject) => {\n        let res = \"\";\n        for (const elem of x.elements) {\n          res += elem.tags.name;\n        }\n        popup.setPopupContent(res);\n      });\n      this.restService.reverseGeocode(this.curRect[0]).subscribe((x) => {\n        this.address = x;\n      });\n    });\n\n    this.layers.push(polygon);\n\n    this.chRef.detectChanges();\n  }\n}\n\nfunction getRandomColor() {\n  var letters = \"0123456789ABCDEF\";\n  var color = \"#\";\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nfunction avg(tile: Tile): number {\n  return (\n    (tile.parkingLotScore +\n      tile.restaurantScore +\n      tile.transportationScore +\n      tile.groceriesScore +\n      tile.barScore) /\n    5 /\n    100\n  );\n}\n","\n<div style=\"height: 97%;\" leaflet [leafletOptions]=\"options\"\n\n\n[leafletLayers]=\"layers\" id=\"mapid\"\n(leafletMapReady)=\"onMapReady($event)\">\n<div class=\"tooltip\" #tooltip></div>\n</div>\n<img src=\"assets/avatar.png\" class=\"avatar\">\n<div class=\"speechbubble\" *ngIf=\"!!address\">Neugierig? Finde <a target=\"_blank\" [href]=\"'https://www.kalaydo.de/immobilien/mietwohnungen/o/3/4/?geoName=' + address\">hier</a> Wohnungen in <b>{{address}}</b></div>\n<div class=\"speechbubble\" *ngIf=\"!address\">Wähle links deine <b>Präferenzen</b> für die <b>perfekte Nachbarschaft!</b></div>","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable, of, Subject } from \"rxjs\";\nimport { Geocode } from \"./geocode\";\nimport { map, tap } from \"rxjs/operators\";\n\nexport declare module OSM {\n  export interface Tags {\n    brand: string;\n    name: string;\n    shop: string;\n    toilets: string;\n    wheelchair: string;\n  }\n\n  export interface Element {\n    type: string;\n    id: number;\n    lat: number;\n    lon: number;\n    timestamp: Date;\n    version: number;\n    changeset: number;\n    user: string;\n    uid: number;\n    tags: Tags;\n  }\n\n  export interface RootObject {\n    version: string;\n    generator: string;\n    copyright: string;\n    attribution: string;\n    license: string;\n    elements: Element[];\n  }\n}\nexport class Tile {\n  id: string;\n  latitude: string;\n  longitude: string;\n  groceriesScore: number;\n  transportationScore: number;\n  parkingLotScore: number;\n  barScore: number;\n  restaurantScore: number;\n}\n\nexport class Details {\n  id: string;\n  tilesId: string;\n  type: string;\n  distance: string;\n  nodeId: string;\n\n  constructor(\n    id: string,\n    tilesId: string,\n    type: string,\n    distance: string,\n    nodeId: string\n  ) {\n    this.id = id;\n    this.tilesId = tilesId;\n    this.type = type;\n    this.distance = distance;\n    this.nodeId = nodeId;\n  }\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class RestService {\n  public tiles = new BehaviorSubject<Tile[]>([]);\n  public initialTiles = [];\n\n  constructor(private client: HttpClient) {}\n\n  getDetails(coords: [number, number]): Observable<Details[]> {\n    return of([\n      new Details(\n        \"ID\",\n        \"TilesID\",\n        \"Bar\",\n        \"\" + Math.random() * 10000,\n        \"1015047079\"\n      ),\n      new Details(\n        \"ID\",\n        \"TilesID\",\n        \"Bar\",\n        \"\" + Math.random() * 10000,\n        \"1015047079\"\n      ),\n      new Details(\n        \"ID\",\n        \"TilesID\",\n        \"Studio\",\n        \"\" + Math.random() * 10000,\n        \"1015047079\"\n      ),\n    ]);\n  }\n\n  getSpecificInfos(): Observable<OSM.RootObject> {\n    return this.client.get<OSM.RootObject>(\n      \"https://api.openstreetmap.org/api/0.6/node/1015047079.json\"\n    );\n  }\n\n  getAllTiles(): Observable<Tile[]> {\n    return this.client\n      .get<Tile[]>(\"https://e97cdbfd571e.ngrok.io/api/tiles\")\n      .pipe(\n        tap((tiles: Tile[]) => {\n          this.initialTiles = tiles;\n          this.tiles.next(JSON.parse(JSON.stringify(tiles)));\n        })\n      );\n  }\n\n  reverseGeocode(coord: [number, number]): Observable<string> {\n    return this.client\n      .get<Geocode>(\n        `https://api.opencagedata.com/geocode/v1/json?key=255440e4c59440e09a2c30126391b76a&q=${coord[0]},${coord[1]}&pretty=1`\n      )\n      .pipe(\n        map((g: Geocode) => {\n          if (g.results.length === 0) {\n            return \"\";\n          }\n          const comp = g.results[0].components;\n          let firstPart: string;\n          if (comp.road) {\n            firstPart = comp.road;\n          }\n          if (comp.neighbourhood) {\n            firstPart = comp.neighbourhood;\n          }\n          if (!firstPart) {\n            return \"\";\n          }\n          if (!comp.city) {\n            return \"\";\n          }\n          return `${firstPart}, ${comp.postcode} ${comp.city}`;\n        })\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LandingComponent } from './landing/landing.component';\nimport { OverviewComponent } from './overview/overview.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: LandingComponent\n    },\n    {\n        path: 'overview',\n        component: OverviewComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\nimport { MapComponent } from './map.component';\n\n\n\n@NgModule({\n  declarations: [MapComponent],\n  imports: [\n    CommonModule,\n    LeafletModule,\n  ],\n  exports: [\n    MapComponent\n  ]\n})\nexport class MapModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}